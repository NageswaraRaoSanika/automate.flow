{"version":3,"sources":["containers/workflow/workflow.module.css","containers/workflows/workflows.module.css","components/header/header.module.css","components/card/card.module.css","components/icons/icon.module.css","components/filter-workflows/filter.module.css","components/modal/modal.module.css","components/page/page.module.css","containers/login/login.module.css","api/index.js","store/auth/actions.js","store/auth/types.js","store/auth/index.js","store/workflows/index.js","store/workflows/types.js","store/reducer.js","store/index.js","components/icons/icon.component.js","components/header/header.component.js","components/page/page.component.js","containers/login/login.container.js","components/filter-workflows/filter.component.js","components/card/card.component.js","components/modal/modal.component.js","store/workflows/actions.js","containers/workflows/workflows.container.js","containers/workflow/workflow.container.js","app.routes.js","serviceWorker.js","index.js"],"names":["module","exports","isUserExists","email","JSON","parse","localStorage","getItem","filter","u","length","getAuthUser","getCurrentUserData","updateCurrentUserData","data","updatedUsers","map","setItem","stringify","authenticate","payload","dispatch","type","user","password","getUserByEmailAndPassword","workflows","createUserSession","window","location","reload","signUpUser","userData","users","status","message","push","addUser","checkAuth","logout","removeItem","initialStore","error","loading","loginMessage","signUpMessage","authStore","state","action","loginMessageata","workflow","workflowsStore","rootReducer","combineReducers","loggerMiddleware","createLogger","store","initialState","createStore","applyMiddleware","thunkMiddleware","FlowIcon","className","styles","largeIcon","UserIcon","icon","StatusIcon","color","style","Header","props","navbar","navlinks","href","username","name","onClick","Page","pageContent","children","LoginContainer","auth","useSelector","shallowEqual","useState","showLogin","setShowLogin","loginCreds","setloginCreds","signUpCreds","setSignUpCreds","useDispatch","landingContainer","onSubmit","e","preventDefault","login","loginSection","label","value","onChange","target","required","bottomText","signUp","FilterWorkflows","filterByName","placeholder","search","filterByState","CARD_STATUS_COLORS","Pending","background","InProgress","Completed","Card","workflowCard","statusIcon","updateStaus","title","description","footer","Modal","isOpen","close","elementId","createPortal","wrapperStyle","maskStyle","containerStyle","document","getElementById","useModal","setOpen","open","useCallback","ModalWrapper","getWorkflows","addWorkflow","key","Date","getTime","nodes","id","addWorkflowToStorage","updateWorkflow","updateWorkflowstoStorage","Workflows","setData","setName","useEffect","Object","values","renderDescription","totalNodes","pending","n","inProgress","completed","getStatus","history","useHistory","handleWorkflowSubmit","createWorkflow","workflowsContainer","d","indexOf","workflowClickWrapper","Workflow","match","params","setNodes","save","setSave","currentNodes","setStatus","node","index","a","newStatus","newNodes","goBack","workflowContainer","newWorkflows","setTimeout","saveWorkflow","add","tempValue","randomIndex","Math","floor","random","shuffleNodes","shuffle","increment","addNode","pop","deleteNode","delete","i","AppRoutes","path","exact","render","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4bf0031e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"workflowContainer\":\"workflow_workflowContainer__201cI\",\"nodes\":\"workflow_nodes__KpIcs\",\"shuffle\":\"workflow_shuffle__B36mQ\",\"add\":\"workflow_add__10yfi\",\"delete\":\"workflow_delete__2DX8R\",\"message\":\"workflow_message__1g3M4\",\"goBack\":\"workflow_goBack__1yrG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workflowsContainer\":\"workflows_workflowsContainer__1oORw\",\"workflows\":\"workflows_workflows__3DzZ7\",\"createWorkflow\":\"workflows_createWorkflow__1T49Y\",\"workflowClickWrapper\":\"workflows_workflowClickWrapper__3PYcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"header_navbar__1S2KZ\",\"icon\":\"header_icon__2CeRL\",\"navlinks\":\"header_navlinks__QqqLd\",\"username\":\"header_username__1yRzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workflowCard\":\"card_workflowCard__3IfWZ\",\"title\":\"card_title__25_dG\",\"description\":\"card_description__3AxT0\",\"footer\":\"card_footer__3GDSx\",\"statusIcon\":\"card_statusIcon__3Twis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"largeIcon\":\"icon_largeIcon__29UOF\",\"icon\":\"icon_icon__bhWCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"filter_search__3xeVs\",\"label\":\"filter_label__t7nhG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperStyle\":\"modal_wrapperStyle__3kk3g\",\"maskStyle\":\"modal_maskStyle__XEHy1\",\"containerStyle\":\"modal_containerStyle__284zZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContent\":\"page_pageContent__1RiZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingContainer\":\"login_landingContainer__2hD3C\",\"loginSection\":\"login_loginSection__24oNG\",\"signupSection\":\"login_signupSection__oq0J5\",\"label\":\"login_label__HZ8N3\",\"bottomText\":\"login_bottomText__Tk1UU\",\"message\":\"login_message__3LCjN\",\"error\":\"login_error__1SUCU\"};","const STORAGE_NAME = \"automate.flow\";\nconst CURRENT_USER = \"flow.user\";\n\nexport const addUser = (user) => {\n  const userData = {\n    ...user,\n    workflows: {},\n  };\n  const users = JSON.parse(localStorage.getItem(STORAGE_NAME));\n  if (users === null ) {\n    localStorage.setItem(STORAGE_NAME, JSON.stringify([userData]));\n    return {\n      status: 200,\n      message: 'User created successfully! Please Login to continue',\n    }\n  } else {\n    if (!isUserExists(user.email)) {\n      users.push(userData);\n      localStorage.setItem(STORAGE_NAME, JSON.stringify(users));\n      return {\n        status: 200,\n        message: 'User created successfully! Please Login to continue',\n      }\n    } else {\n      return {\n        status: 400,\n        message: `User with ${user.email} already present in the system, Please Login to continue`,\n      }\n    }\n  }\n};\n\nexport const isUserExists = (email) => {\n  const users = JSON.parse(localStorage.getItem(STORAGE_NAME));\n  if (users.filter((u) => u.email === email).length > 0) {\n    return true;\n  }\n  \n  return false;\n}\n\nexport const getUserByEmailAndPassword = (user) => {\n  const users = JSON.parse(localStorage.getItem(STORAGE_NAME)) || [];\n  return  users.filter((u) => u.email === user.email && u.password === user.password);\n}\n\nexport const createUserSession = (user) => {\n  delete user.workflows;\n  delete user.password;\n  localStorage.setItem(CURRENT_USER, JSON.stringify(user));\n}\n\nexport const destroyUserSession = () => {\n  localStorage.removeItem(CURRENT_USER);\n}\n\nexport const getAuthUser = () => {\n  return JSON.parse(localStorage.getItem(CURRENT_USER));\n}\n\nconst getCurrentUserData = () => {\n  const users = JSON.parse(localStorage.getItem(STORAGE_NAME));\n  const [user] = users.filter((u) => u.email === getAuthUser().email);\n  return user;\n}\n\nconst updateCurrentUserData = (data) => {\n  const users = JSON.parse(localStorage.getItem(STORAGE_NAME));\n  const updatedUsers = users.map((u) => {\n    if (u.email === getAuthUser().email) {\n      return data;\n    }\n    else {\n      return u;\n    }\n  });\n  localStorage.setItem(STORAGE_NAME, JSON.stringify(updatedUsers));\n  return updatedUsers;\n}\n\nexport const getWorkflows = () => getCurrentUserData().workflows;\n\nexport const addWorkflow = (name) => {\n  const user = getCurrentUserData();\n  const key = new Date().getTime();\n  user.workflows = {\n    ...user.workflows,\n    [key]: {\n      name,\n      status: 'Pending',\n      nodes: [],\n      id: key,\n    },\n  };\n  updateCurrentUserData(user);\n  return user.workflows;\n}\n\nexport const updateWorkflows = (workflows) => {\n  const user = getCurrentUserData();\n  updateCurrentUserData({...user, workflows});\n  return workflows;\n};\n","import {\n  addUser,\n  getUserByEmailAndPassword,\n  createUserSession,\n  getAuthUser,\n  destroyUserSession,\n} from '../../api';\n\nimport {\n  LOGIN_REQUEST,\n  LOGIN_REQUEST_FAIL,\n  LOGIN_REQUEST_SUCCESS,\n  SIGNUP_REQUEST,\n  SIGNUP_REQUEST_FAIL,\n  SIGNUP_REQUEST_SUCCESS,\n} from './types';\n\nexport const authenticate = (payload) => (dispatch) => {\n  dispatch({ type: LOGIN_REQUEST });\n  const user = getUserByEmailAndPassword(payload);\n  if (user.length > 0) {\n    createUserSession(user[0]);\n    dispatch({ type: LOGIN_REQUEST_SUCCESS, data: 'success' });\n    window.location.reload(false);\n  } else {\n    dispatch({ type: LOGIN_REQUEST_FAIL, data: 'Please enter correct email & password' });\n  }\n};\n\nexport const signUpUser = (payload) => (dispatch) => {\n  dispatch({ type: SIGNUP_REQUEST });\n  const { status, message } = addUser(payload);\n  if (status === 200) {\n    dispatch({ type: SIGNUP_REQUEST_SUCCESS, data: message });\n  } else {\n    dispatch({ type: SIGNUP_REQUEST_FAIL, data: message });\n  }\n};\n\nexport const checkAuth = () => getAuthUser();\n\nexport const logout = () => destroyUserSession();\n\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\nexport const LOGIN_REQUEST_FAIL = 'LOGIN_REQUEST_FAIL';\n\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_REQUEST_SUCCESS = 'SIGNUP_REQUEST_SUCCESS';\nexport const SIGNUP_REQUEST_FAIL = 'SIGNUP_REQUEST_FAIL';\n\nexport const LOGOUT_USER = 'LOGOUT_USER';\n","import {\n  LOGIN_REQUEST,\n  LOGIN_REQUEST_SUCCESS,\n  LOGIN_REQUEST_FAIL,\n  SIGNUP_REQUEST,\n  SIGNUP_REQUEST_FAIL,\n  SIGNUP_REQUEST_SUCCESS,\n} from './types';\n\nconst initialStore = {\n  error: null,\n  loading: false,\n  loginMessage: '',\n  signUpMessage: '',\n};\n\nconst authStore = (state = initialStore, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        loginMessageata: '',\n        signUpMessage: '',\n        error: null,\n      };\n\n    case LOGIN_REQUEST_SUCCESS:\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        loginMessage: action.data,\n      };\n\n    case LOGIN_REQUEST_FAIL:\n      return {\n        ...state,\n        loginMessage: '',\n        error: action.data,\n        loading: false,\n      };\n  \n    case SIGNUP_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        signUpMessage: '',\n        loginMessage: '',\n        error: null,\n      };\n\n    case SIGNUP_REQUEST_SUCCESS:\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        signUpMessage: action.data,\n      };\n\n    case SIGNUP_REQUEST_FAIL:\n      return {\n        ...state,\n        signUpMessage: '',\n        error: action.data,\n        loading: false,\n      };\n\n    default: return state;\n  }\n};\n\nexport default authStore;","import {\n  LIST_WORKFLOWS,\n  SET_CURRENT_WORKFLOW\n} from './types';\n\nconst initialStore = {\n  workflows: {},\n  workflow: {}\n};\n\nconst workflowsStore = (state = initialStore, action) => {\n  switch (action.type) {\n    case LIST_WORKFLOWS:\n      return {\n        ...state,\n        workflows: action.data,\n      };\n\n    case SET_CURRENT_WORKFLOW:\n      return {\n        ...state,\n        workflow: action.data,\n      };\n  \n    default: return state;\n  }\n};\n\nexport default workflowsStore;\n","export const LIST_WORKFLOWS = 'LIST_WORKFLOWS';\nexport const ADD_WORKFLOW = 'ADD_WORKFLOW';\nexport const FILTER_WORKFLOW = 'FILTER_WORKFLOW';\nexport const DELETE_WORKFLOW = 'FILTER_WORKFLOW';\nexport const UPDATE_WORKFLOW = 'UPDATE_WORKFLOW';\nexport const SET_CURRENT_WORKFLOW = 'SET_CURRENT_WORKFLOW';\n","\nimport { combineReducers } from 'redux';\n\nimport authStore from './auth';\nimport workflowsStore from './workflows';\n\nconst rootReducer = combineReducers({\n  authStore,\n  workflowsStore,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nimport rootReducer from './reducer';\n\nconst loggerMiddleware = createLogger();\n\nconst store = (initialState = {}) => {\n  return createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunkMiddleware, loggerMiddleware),\n  );\n};\n\nexport default store;\n","import React from 'react';\nimport styles from './icon.module.css';\n\nexport const FlowIcon = () => <span className={styles.largeIcon}>&#9753;</span>;\n\nexport const UserIcon = () => <span className={styles.icon}>&#9786;</span>;\n\nexport const StatusIcon = ({color}) => <span className={styles.icon} style={{color}}>&#10004;</span>;","import React from 'react';\nimport { FlowIcon, UserIcon } from '../icons/icon.component';\nimport { checkAuth, logout } from '../../store/auth/actions';\n\nimport styles from './header.module.css';\n\ntype Props = {\n\n};\n\nconst Header = (props: Props) => {\n  const user = checkAuth();\n  return (\n    <div className={styles.navbar}>\n      <div className={styles.icon}>\n        <FlowIcon />\n        automate.flow\n      </div>\n      {\n        user &&\n        (<div className={styles.navlinks}>\n          <a href=\"#profile\" className={styles.username}>\n            <UserIcon /> {user?.name}\n          </a>\n          <a onClick={() => logout()} href=\"/\" className={styles.logout}>\n            Logout\n        </a>\n        </div>)\n      }\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from '../header/header.component';\nimport styles from './page.module.css';\n\ntype Props = {\n  children: Node,\n};\n\nconst Page = (props: Props) => {\n  return (\n    <div>\n      <Header />\n      <div className={styles.pageContent}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport Page from '../../components/page/page.component';\n\nimport { authenticate, signUpUser } from '../../store/auth/actions';\n\nimport styles from './login.module.css';\n\nconst LoginContainer = () => {\n  const { auth } = useSelector((store) => ({\n    auth: store.authStore,\n  }), shallowEqual);\n\n  const [showLogin, setShowLogin] = useState(true);\n\n  const [loginCreds, setloginCreds] = useState({\n    email: '',\n    password: '',\n  });\n\n  const [signUpCreds, setSignUpCreds] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const login = (e) => {\n    e.preventDefault();\n    dispatch(authenticate(loginCreds));\n  }\n\n  const signUp = (e) => {\n    e.preventDefault();\n    dispatch(signUpUser(signUpCreds));\n  }\n\n  return (\n    <Page>\n      <div className={styles.landingContainer}>\n        {\n          showLogin ? (\n            <form onSubmit={(e) => login(e)} className={styles.loginSection}>\n              <h2>Login</h2>\n              <div className={styles.label}>\n                Email\n              </div>\n              <input\n                value={loginCreds.email}\n                onChange={(e)=> setloginCreds({ ...loginCreds, email: e.target.value })}\n                required\n                name=\"email\"\n                type=\"email\"\n              />\n              <div className={styles.label}>\n                Password\n              </div>\n              <input\n                value={loginCreds.password}\n                required\n                onChange={(e)=> setloginCreds({ ...loginCreds, password: e.target.value })}\n                name=\"password\"\n                type=\"password\"\n              />\n              {auth.loginMessage && (<div className={styles.message}>{auth.loginMessage}</div>)}\n              {auth.error && (<div className={styles.error}>{auth.error}</div>)}\n              <button type=\"submit\">\n                Login\n              </button>\n              <div onClick={() => setShowLogin(false)} className={styles.bottomText}>\n                Don't have an account? Signup here\n              </div>\n            </form>\n          )\n            : (\n              <form onSubmit={(e) => signUp(e)} className={styles.loginSection}>\n                <h2>Sign up</h2>\n                <div className={styles.label}>\n                  Name\n                </div>\n                <input\n                  value={signUpCreds.name}\n                  onChange={(e)=> setSignUpCreds({ ...signUpCreds, name: e.target.value })}\n                  required\n                  name=\"name\"\n                  type=\"text\"\n                />\n                <div className={styles.label}>\n                  Email\n                </div>\n                <input\n                  value={signUpCreds.email}\n                  onChange={(e)=> setSignUpCreds({ ...signUpCreds, email: e.target.value })}\n                  required\n                  name=\"email\"\n                  type=\"email\"\n                />\n                <div className={styles.label}>\n                  Password\n                </div>\n                <input\n                  value={signUpCreds.password}\n                  required\n                  onChange={(e)=> setSignUpCreds({ ...signUpCreds, password: e.target.value })}\n                  name=\"password\"\n                  type=\"password\"\n                />\n                {auth.signUpMessage && (<div className={styles.message}>{auth.signUpMessage}</div>)}\n                {auth.error && (<div className={styles.error}>{auth.error}</div>)}\n                <button type=\"submit\">\n                  Sing up\n                </button>\n                <div onClick={() => setShowLogin(true)} className={styles.bottomText}>\n                  Already have an account? Login here\n                </div>\n              </form>\n            )\n        }\n      </div>\n    </Page>\n  );\n}\n\nexport default LoginContainer;\n","import React from 'react';\nimport styles from './filter.module.css';\n\ntype Props = {\n  filterByName: void => null,\n  filterByState: void => null,\n};\n\nconst FilterWorkflows = (props: Props) => {\n  return (\n    <div>\n      <div className={styles.label}>Search</div>\n      <input\n        onChange={(e) => props.filterByName(e.target.value)}\n        placeholder=\"Search by workflow name\"\n        className={styles.search} type=\"text\"\n      />\n      <div className={styles.label}>Filter</div>\n      <select onChange={(e) => props.filterByState(e.target.value)}>\n        <option value=\"\">All</option>\n        <option value=\"Completed\">Completed</option>\n        <option value=\"Pending\">Pending</option>\n      </select>\n    </div>\n  )\n};\n\nexport default FilterWorkflows;\n","import React from 'react';\nimport styles from './card.module.css';\n\nimport { StatusIcon } from '../icons/icon.component';\n\ntype Props = {\n  name: String, \n  description: String,\n  status: String,\n  updateStaus: void => null,\n}\n\nconst CARD_STATUS_COLORS = {\n  Pending: {\n    background: '#f2f2f2',\n    color: '#000'\n  },\n  InProgress: {\n    background: 'rgb(26, 115, 232)',\n    color: '#fff',\n  },\n  Completed: {\n    background: 'green',\n    color: '#fff',\n  }\n}\nconst Card = (props: Props) => {\n  return (\n    <div className={styles.workflowCard}>\n      <div\n        className={styles.statusIcon}\n        onClick={(e) => {\n          e.preventDefault();\n          props.updateStaus(props.status);\n        }}\n        style={{...CARD_STATUS_COLORS[props.status]}}\n      >\n        <StatusIcon />\n      </div>\n      <div className={styles.title}>\n        {props.title}\n      </div>\n      {props.description && (<div className={styles.description}>\n        {props.description}\n      </div>)}\n      <div className={styles.footer}>\n        <div>{props.status}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useCallback, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport styles from './modal.module.css';\n\nconst Modal = ({ children, isOpen = false, close, elementId = 'root' }) => {\n  if (isOpen === false) {\n    return null;\n  }\n  return createPortal(\n    <div className={styles.wrapperStyle}>\n      <div className={styles.maskStyle} onClick={close} />\n      <div className={styles.containerStyle}>{children}</div>\n    </div>,\n    document.getElementById(elementId)\n  );\n};\n\nconst useModal = (elementId = 'root', options = {}) => {\n  const [isOpen, setOpen] = useState(false);\n  const open = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n  const close = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const ModalWrapper = useCallback(({ children }) => {\n    return (\n      <Modal isOpen={isOpen} close={close} elementId={elementId}>\n        {children}\n      </Modal>\n    )\n  }, [isOpen, close, elementId]);\n\n  return [ModalWrapper, open, close, isOpen];\n};\n\nexport default useModal;\n","import {\n  addWorkflow as addWorkflowToStorage,\n  getWorkflows as listFlows,\n  updateWorkflows as updateWorkflowstoStorage\n} from '../../api';\n\nimport {\n  ADD_WORKFLOW, LIST_WORKFLOWS, SET_CURRENT_WORKFLOW,\n} from './types';\n\nexport const getWorkflows = () => (dispatch) => {\n  const data = listFlows();\n  dispatch({ type: LIST_WORKFLOWS, data });\n};\n\nexport const addWorkflow = (name) => (dispatch) => {\n  dispatch({ type: ADD_WORKFLOW });\n  const data = addWorkflowToStorage(name);\n  dispatch({ type: LIST_WORKFLOWS, data });\n};\n\nexport const setCurrentWorkflow = (payload) => (dispatch) => {\n  dispatch({ type: SET_CURRENT_WORKFLOW, data: payload });\n};\n\nexport const updateWorkflow = (workflows) => (dispatch) => {\n  const data = updateWorkflowstoStorage(workflows);\n  dispatch({ type: LIST_WORKFLOWS, data });\n}","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport FilterWorkflows from '../../components/filter-workflows/filter.component';\nimport Page from '../../components/page/page.component';\nimport Card from '../../components/card/card.component';\nimport useModal from '../../components/modal/modal.component';\n\nimport styles from './workflows.module.css';\nimport { addWorkflow, getWorkflows } from '../../store/workflows/actions';\n\nconst Workflows = (props: Props) => {\n  const { workflows } = useSelector((store) => ({\n    workflows: store.workflowsStore.workflows,\n  }), shallowEqual);\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [name, setName] = useState('');\n  const [Modal, open, close] = useModal('addWorkflow');\n\n  useEffect(() => {\n    dispatch(getWorkflows());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setData(Object.values(workflows))\n  }, [workflows]);\n\n  const handleWorkflowSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addWorkflow(name));\n    close();\n  }\n\n  const renderDescription = (workflow) => {\n    const { nodes = [] } = workflow;\n    const totalNodes = nodes.length;\n    const pending = nodes.filter(n => n.status === 'Pending').length;\n    const inProgress = nodes.filter(n => n.status === 'InProgress').length;\n    const completed = nodes.filter(n => n.status === 'Completed').length;\n\n    return (\n      <>\n        <div>Total Nodes: {totalNodes}</div>\n        <small>Pending: {pending}</small><br />\n        <small>InProgress: {inProgress}</small><br />\n        <small>Completed: {completed}</small>\n      </>\n    )\n  };\n\n  const getStatus = (workflow) => {\n    const { nodes = [] } = workflow;\n    const totalNodes = nodes.length;\n    const completed = nodes.filter(n => n.status === 'Completed').length;\n\n    if (totalNodes > 0 && completed === totalNodes) {\n      return 'Completed';\n    } else {\n      return 'Pending';\n    }\n  }\n  const history = useHistory();\n  return (\n    <Page>\n      <Modal>\n        <form onSubmit={(e) => handleWorkflowSubmit(e)}>\n          <h2>Add Workflow</h2>\n          <div>\n            <div className={styles.label}>Workflow Name</div>\n            <input required onChange={(e) => setName(e.target.value)} value={name} type=\"text\" />\n          </div>\n          <button type=\"submit\" className={styles.createWorkflow}>\n            Submit\n          </button>\n        </form>\n      </Modal>\n      <div id=\"addWorkflow\" />\n      <h2>Workflows</h2>\n      <div className={styles.workflowsContainer}>\n        <div>\n          <button type=\"button\" onClick={open} className={styles.createWorkflow}>\n            + Create New Workflow\n          </button>\n          <FilterWorkflows\n            filterByName={\n              (name) => name === ''\n                ? setData(Object.values(workflows))\n                : setData(Object.values(workflows).filter(d => d.name.indexOf(name) > -1))\n            }\n            filterByState={\n              (state) => state === ''\n                ? setData(Object.values(workflows))\n                : setData(Object.values(workflows).filter(d => getStatus(d) === state))\n            }\n          />\n        </div>\n        <div className={styles.workflows}>\n          {\n            data.length > 0 ? data.map((d) => (\n              <div className={styles.workflowClickWrapper} onClick={() =>history.push(`/automate.flow/workflow/${d.id}`)} key={d.id}>\n                <Card\n                  title={d.name}\n                  status={getStatus(d)}\n                  description={renderDescription(d)}\n                  updateStaus={() => null}\n                />\n              </div>\n            )) : 'No Workflows found'\n          }\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default Workflows;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport Page from '../../components/page/page.component';\nimport Card from '../../components/card/card.component';\nimport styles from './workflow.module.css';\nimport { getWorkflows, updateWorkflow } from '../../store/workflows/actions';\n\ntype Props = {\n  match: Object,\n}\n\nconst Workflow = (props: Props) => {\n  const { match: { params: { id } } } = props;\n  const { workflows } = useSelector((store) => ({\n    workflows: store.workflowsStore.workflows,\n  }), shallowEqual);\n  const dispatch = useDispatch();\n\n  const [nodes, setNodes] = useState([]);\n  const [save, setSave] = useState(false);\n\n  useEffect(() => {\n    if (Object.values(workflows).length === 0) {\n      dispatch(getWorkflows());\n    }\n  }, [dispatch, workflows]);\n  const workflow = workflows[id] || {};\n  const { name = '', nodes: currentNodes = [] } = workflow;\n\n  useEffect(() => {\n    setNodes(currentNodes)\n  }, [currentNodes]);\n\n  const addNode = () => {\n    const increment = nodes.length + 1;\n    const id = `Node ${increment}`;\n    const status = 'Pending';\n    const node = { id, status };\n    setNodes([...nodes, node]);\n  };\n\n  const deleteNode = () => {\n    const newNodes = [...nodes];\n    newNodes.pop();\n    setNodes(newNodes);\n  };\n\n  const shuffleNodes = () => {\n    // Fisher–Yates_shuffle algorithm\n    const newNodes = [...nodes];\n    let index = newNodes.length;\n    let tempValue = null;\n    let randomIndex = 0;\n    while (0 !== index) {\n      randomIndex = Math.floor(Math.random() * index);\n      index -= 1;\n      tempValue = newNodes[index];\n      newNodes[index] = newNodes[randomIndex];\n      newNodes[randomIndex] = tempValue;\n    }\n    setNodes(newNodes);\n  };\n\n  const saveWorkflow = () => {\n    const newWorkflows = { ...workflows };\n    newWorkflows[id].nodes = nodes;\n    dispatch(updateWorkflow(newWorkflows));\n    setSave(true);\n    setTimeout(() => setSave(false), 3000);\n  };\n\n  const setStatus = async (node, status, index) => {\n    const newStatus = () => {\n      if (status === 'Pending') {\n        return 'InProgress';\n      }\n\n      if (status === 'InProgress') {\n        return 'Completed'\n      }\n\n      if (status === 'Completed') {\n        return 'Pending'\n      }\n    };\n\n    const newNodes = [...nodes];\n    newNodes[index] = { ...newNodes[index], status: newStatus() }\n    setNodes(newNodes);\n  };\n\n  return (\n    <Page>\n      <a className={styles.goBack} href=\"/automate.flow\"> &#10094; Back to Workflows</a>\n      {save && <div className={styles.message}>\n        Workflow Saved Successfully!\n      </div>}\n      <h2>{name}</h2>\n      <div className={styles.workflowContainer}>\n        <div>\n          <button onClick={() => saveWorkflow()} type=\"button\" className={styles.add}>\n            &#10003;\n            Save\n          </button>\n          {\n            (nodes.length !== 0 && nodes.filter(n => n.status === 'Completed').length === nodes.length) ?\n              (<button type=\"button\" onClick={() => shuffleNodes()} className={styles.shuffle}>\n                &#8617;\n                Shuffle\n              </button>) : null\n          }\n          <button onClick={() => addNode()} type=\"button\" className={styles.add}>\n            &#9783;\n            Add Node\n          </button>\n          <button onClick={() => deleteNode()} type=\"button\" className={styles.delete}>\n            &#10005;\n            Delete\n          </button>\n        </div>\n        <div className={styles.nodes}>\n          {\n            nodes.length > 0 ? nodes.map((d, i) => (\n              <Card\n                title={d.id}\n                key={d.id}\n                status={d.status}\n                updateStaus={(status) => setStatus(d, status, i)}\n              />\n            )) : 'No nodes found'\n          }\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default Workflow;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport { checkAuth } from './store/auth/actions';\n\nimport store from './store';\n\nimport LoginContainer from './containers/login/login.container';\nimport Workflows from './containers/workflows/workflows.container';\nimport Workflow from './containers/workflow/workflow.container';\n\nconst AppRoutes = () => {\n  const user = checkAuth();\n\n  return (\n    <Provider store={store()}>\n      <Router>\n        <Switch>\n          <Route\n            path=\"/automate.flow\"\n            exact={true}\n            render={() => {\n              if (user !== null) {\n                return <Workflows />;\n              } else {\n                return <LoginContainer />;\n              }\n            }}\n          />\n          <Route\n            path=\"/automate.flow/workflow/:id\"\n            exact={true}\n            render={(props) => {\n              if (user !== null) {\n                return <Workflow {...props} />;\n              } else {\n                return <LoginContainer />;\n              }\n            }}\n          />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default AppRoutes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/theme.css';\nimport AppRoutes from './app.routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRoutes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}